version: '3.7'

networks:
  matrix-network:
    driver: bridge

services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.matrix.address=:8448"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8448:8448"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro
      - ./traefik/certs:/etc/traefik/certs:ro
    networks:
      matrix-network:
        aliases:
          - hs1
          - hs2
          - rc1


# HomeServer 1 (synapse)
  hs1c:
    image: matrixdotorg/synapse:latest
    # build:
    #   context: ../synapse
    #   dockerfile: ../synapse/docker/Dockerfile
    container_name: hs1c
    entrypoint: sh -c "update-ca-certificates && /start.py"
    volumes:
      - ./hs1:/data
      - ./traefik/certs/ca:/usr/local/share/ca-certificates
      # - ../synapse/synapse:/synapse/synapse/
    networks:
      - matrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hs1.rule=Host(`hs1`)"
      - "traefik.http.routers.hs1.entrypoints=websecure"
      - "traefik.http.routers.hs1.tls=true"
      - "traefik.http.services.hs1.loadbalancer.server.port=8448"

  hs1_wk:
    image: nginx:alpine
    container_name: hs1_wk
    volumes:
      - ./traefik/well-known/hs1/.well-known:/usr/share/nginx/html/.well-known:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hs1_wk.rule=Host(`hs1`) && PathPrefix(`/.well-known`)"
      - "traefik.http.routers.hs1_wk.entrypoints=websecure"
      - "traefik.http.routers.hs1_wk.tls=true"
    networks:
      - matrix-network


# HomeServer 2 (synapse)
  hs2c:
    image: matrixdotorg/synapse:latest
    # build:
    #   context: ../synapse
    #   dockerfile: ../synapse/docker/Dockerfile
    container_name: hs2c
    entrypoint: sh -c "update-ca-certificates && /start.py"
    volumes:
      - ./hs2:/data
      - ./traefik/certs/ca:/usr/local/share/ca-certificates
      # - ../synapse/synapse:/synapse/synapse/
    networks:
      - matrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hs2.rule=Host(`hs2`)"
      - "traefik.http.routers.hs2.entrypoints=websecure"
      - "traefik.http.routers.hs2.tls=true"
      - "traefik.http.services.hs2.loadbalancer.server.port=8448"

  hs2_wk:
    image: nginx:alpine
    container_name: hs2_wk
    volumes:
      - ./traefik/well-known/hs2/.well-known:/usr/share/nginx/html/.well-known:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hs2_wk.rule=Host(`hs2`) && PathPrefix(`/.well-known`)"
      - "traefik.http.routers.hs2_wk.entrypoints=websecure"
      - "traefik.http.routers.hs2_wk.tls=true"
    networks:
      - matrix-network


# HomeServer 2 (synapse)
  rc1c:
    build:
      context: ../homeserver
    container_name: rc1c
    entrypoint: sh -c "update-ca-certificates && bun run --watch index.ts"
    volumes:
      - ./traefik/certs/ca:/usr/local/share/ca-certificates
      - ../homeserver:/usr/src/app
    networks:
      - matrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rc1.rule=Host(`rc1`)"
      - "traefik.http.routers.rc1.entrypoints=websecure"
      - "traefik.http.routers.rc1.tls=true"
      - "traefik.http.services.rc1.loadbalancer.server.port=8080"

  rc1_wk:
    image: nginx:alpine
    container_name: rc1_wk
    volumes:
      - ./traefik/well-known/rc1/.well-known:/usr/share/nginx/html/.well-known:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rc1_wk.rule=Host(`rc1`) && PathPrefix(`/.well-known`)"
      - "traefik.http.routers.rc1_wk.entrypoints=websecure"
      - "traefik.http.routers.rc1_wk.tls=true"
    networks:
      - matrix-network


# Element
  element:
    image: vectorim/element-web
    container_name: element
    ports:
      - "8080:80"
    volumes:
      - ./element/config.json:/app/config.json
    networks:
      - matrix-network
    depends_on:
      - hs1c
      - hs2c
      - rc1c
